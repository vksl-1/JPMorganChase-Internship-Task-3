From 4a659e77ed49471bcf16112d71268a642f25e6a9 Mon Sep 17 00:00:00 2001
From: kavya1230 <kavyasri.veeravalli@gmail.com>
Date: Sun, 22 Oct 2023 11:00:30 +0530
Subject: [PATCH] Create Patch File

---
 .gitignore                |  1 +
 README.md                 |  4 ++--
 datafeed/requirements.txt |  2 +-
 datafeed/server3.py       |  4 ++--
 package-lock.json         |  1 +
 package.json              |  1 +
 public/index.html         |  1 +
 src/DataManipulator.ts    | 36 ++++++++++++++++++++++++------------
 src/DataStreamer.ts       |  2 +-
 src/Graph.tsx             | 29 +++++++++++++++++------------
 test.csv                  |  2 +-
 tsconfig.json             |  1 +
 12 files changed, 53 insertions(+), 31 deletions(-)

diff --git a/.gitignore b/.gitignore
index 4d29575..a03a0e9 100755
--- a/.gitignore
+++ b/.gitignore
@@ -18,6 +18,7 @@
 .env.test.local
 .env.production.local
 
+#debug
 npm-debug.log*
 yarn-debug.log*
 yarn-error.log*
diff --git a/README.md b/README.md
index ece42e2..b07b343 100644
--- a/README.md
+++ b/README.md
@@ -1,2 +1,2 @@
-# JPMC Task 3
-Starter repo for task 3 of JPMC's Forage program
+# JPMorgan Chase Internship Task3
+Task 3 of JPMC's Forage program
diff --git a/datafeed/requirements.txt b/datafeed/requirements.txt
index f678e82..8b115b4 100644
--- a/datafeed/requirements.txt
+++ b/datafeed/requirements.txt
@@ -1 +1 @@
-python-dateutil==2.8.2
\ No newline at end of file
+python-dateutil==3.12.0
\ No newline at end of file
diff --git a/datafeed/server3.py b/datafeed/server3.py
index 2de4e28..43b6a49 100644
--- a/datafeed/server3.py
+++ b/datafeed/server3.py
@@ -202,7 +202,7 @@ def get(req_handler, routes):
                 req_handler.wfile.write(bytes(data,  encoding = 'utf-8'))
                 return
 
-def run(routes, host = '0.0.0.0', port = 8080):
+def run(routes, host = '0.0.0.0', port = 7089):
     """ Runs a class as a server whose methods have been decorated with
         @route.
     """
@@ -215,7 +215,7 @@ def run(routes, host = '0.0.0.0', port = 8080):
     thread = threading.Thread(target = server.serve_forever)
     thread.daemon = True
     thread.start()
-    print ('HTTP server started on port 8080')
+    print ('HTTP server started on port 7089')
     while True:
         from time import sleep
         sleep(1)
diff --git a/package-lock.json b/package-lock.json
index 8135a72..aa0fc51 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -22,6 +22,7 @@
         "react-dom": "^16.9.0",
         "react-scripts": "2.1.3"
       },
+      
       "devDependencies": {
         "awesome-typescript-loader": "^5.2.1",
         "source-map-loader": "^0.2.4",
diff --git a/package.json b/package.json
index 8ca3a60..e3fd766 100644
--- a/package.json
+++ b/package.json
@@ -26,6 +26,7 @@
   "eslintConfig": {
     "extends": "react-app"
   },
+  
   "browserslist": [
     ">0.2%",
     "not dead",
diff --git a/public/index.html b/public/index.html
index b40568f..82f2b86 100755
--- a/public/index.html
+++ b/public/index.html
@@ -1,4 +1,5 @@
 <!DOCTYPE html>
+
 <html lang="en">
   <head>
     <meta charset="utf-8" />
diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index 7f62295..1fc3198 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -1,20 +1,32 @@
 import { ServerRespond } from './DataStreamer';
 
 export interface Row {
-  stock: string,
-  top_ask_price: number,
+  price_abc: number,
+  price_def: number,
+  ratio: number,
   timestamp: Date,
+  upper_bound: number,
+  lower_bound: number,
+  trigger_alert: number | undefined,
 }
 
 
 export class DataManipulator {
-  static generateRow(serverResponds: ServerRespond[]) {
-    return serverResponds.map((el: any) => {
-      return {
-        stock: el.stock,
-        top_ask_price: el.top_ask && el.top_ask.price || 0,
-        timestamp: el.timestamp,
-      };
-    })
-  }
-}
+  static generateRow(serverRespond: ServerRespond[]): Row {
+    const priceABC = (serverRespond[0].top_ask.price + serverRespond[0].top_bid.price) / 2;
+    const priceDEF = (serverRespond[1].top_ask.price + serverRespond[1].top_bid.price) / 2;
+    const ratio = priceABC / priceDEF;
+    const upperBound = 1 + 0.05;
+    const lowerBound = 1 - 0.05;
+    return {
+      price_abc: priceABC,
+      price_def: priceDEF,
+      ratio,
+      timestamp: serverRespond[0].timestamp > serverRespond[1].timestamp ?
+        serverRespond[0].timestamp : serverRespond[1].timestamp,
+      upper_bound: upperBound,
+      lower_bound: lowerBound,
+      trigger_alert: (ratio > upperBound || ratio < lowerBound) ? ratio : undefined,
+    };
+   }
+ }
\ No newline at end of file
diff --git a/src/DataStreamer.ts b/src/DataStreamer.ts
index 9d9eca7..85509d9 100644
--- a/src/DataStreamer.ts
+++ b/src/DataStreamer.ts
@@ -10,7 +10,7 @@ export interface ServerRespond {
 }
 
 class DataStreamer {
-  static API_URL: string = 'http://localhost:8080/query?id=1';
+  static API_URL: string = 'http://localhost:7089/query?id=1';
 
   static getData(callback: (data: ServerRespond[]) => void): void {
     const request = new XMLHttpRequest();
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 277797d..1e3e50b 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -3,6 +3,7 @@ import { Table } from '@finos/perspective';
 import { ServerRespond } from './DataStreamer';
 import { DataManipulator } from './DataManipulator';
 import './Graph.css';
+import { type } from 'os';
 
 interface IProps {
   data: ServerRespond[],
@@ -23,36 +24,40 @@ class Graph extends Component<IProps, {}> {
     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
-      stock: 'string',
-      top_ask_price: 'float',
-      top_bid_price: 'float',
+      price_abc: 'float',
+      price_def: 'float',
+      ratio: 'float',
       timestamp: 'date',
+      upper_bound: 'float',
+      lower_bound: 'float',
+      trigger_alert: 'float',
     };
 
-    if (window.perspective && window.perspective.worker()) {
+    if (window.perspective ) {
       this.table = window.perspective.worker().table(schema);
     }
     if (this.table) {
       // Load the `table` in the `<perspective-viewer>` DOM reference.
       elem.load(this.table);
       elem.setAttribute('view', 'y_line');
-      elem.setAttribute('column-pivots', '["stock"]');
-      elem.setAttribute('row-pivots', '["timestamp"]');
-      elem.setAttribute('columns', '["top_ask_price"]');
+      elem.setAttribute('columns', '["ratio", "lower_bound", "upper_bound", "trigger_alert"]');
       elem.setAttribute('aggregates', JSON.stringify({
-        stock: 'distinctcount',
-        top_ask_price: 'avg',
-        top_bid_price: 'avg',
+        price_abc: 'avg',
+        price_def: 'avg',
+        ratio: 'avg',
         timestamp: 'distinct count',
+        upper_bound: 'avg',
+        lower_bound: 'avg',
+        trigger_alert: 'avg',
       }));
     }
   }
 
   componentDidUpdate() {
     if (this.table) {
-      this.table.update(
+      this.table.update([
         DataManipulator.generateRow(this.props.data),
-      );
+    ]);
     }
   }
 }
diff --git a/test.csv b/test.csv
index d2b2a10..10cd96c 100644
--- a/test.csv
+++ b/test.csv
@@ -1,4 +1,4 @@
-2019-02-01 00:30:00.966511,ABC,buy,118.24,21
+2019-01-31 00:30:00.966511,ABC,buy,118.24,21
 2019-02-01 16:29:33.406644,DEF,buy,120.09,71
 2019-02-02 18:37:52.442361,ABC,buy,120.09,131
 2019-02-03 11:49:54.753944,ABC,buy,118.13,145
diff --git a/tsconfig.json b/tsconfig.json
index 0980b23..e20368f 100644
--- a/tsconfig.json
+++ b/tsconfig.json
@@ -19,6 +19,7 @@
     "noEmit": true,
     "jsx": "preserve"
   },
+  
   "include": [
     "src"
   ]
-- 
2.42.0.windows.2

